C51 COMPILER V9.01   OLED                                                                  11/14/2017 12:48:22 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\oled.obj
COMPILER INVOKED BY: F:\Keil\keil5\C51\BIN\C51.EXE ..\OLED\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\12864;..\Delay;..\M
                    -ain;..\NRF24L01;..\Usart;..\OLED) DEBUG OBJECTEXTEND PRINT(.\oled.lst) OBJECT(.\oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //  文 件 名   : main.c
   4          //  版 本 号   : v2.0
   5          //  作    者   : 
   6          //  生成日期   : 2014-0101
   7          //  最近修改   : 
   8          //  功能描述   : OLED 4接口演示例程(51系列)
   9          //              说明: 
  10          //              ----------------------------------------------------------------
  11          //              GND    电源地
  12          //              VCC  接5V或3.3v电源
  13          //              D0   P1^0（SCL）
  14          //              D1   P1^1（SDA）
  15          //              RES  接P12
  16          //              DC   接P13
  17          //              CS   接P14   -----本模块片选脚已经帮用户接地，无需再接               
  18          //              ----------------------------------------------------------------
  19          //******************************************************************************/。
  20          #include "oled.h"
  21          //#include "stdlib.h"
  22          #include "oledfont.h"    
  23          #include "delay.h"
  24          
  25          //OLED的显存
  26          //存放格式如下.
  27          //[0]0 1 2 3 ... 127    
  28          //[1]0 1 2 3 ... 127    
  29          //[2]0 1 2 3 ... 127    
  30          //[3]0 1 2 3 ... 127    
  31          //[4]0 1 2 3 ... 127    
  32          //[5]0 1 2 3 ... 127    
  33          //[6]0 1 2 3 ... 127    
  34          //[7]0 1 2 3 ... 127                       
  35          
  36          #if OLED_MODE==1
              //向SSD1106写入一个字节。
              //dat:要写入的数据/命令
              //cmd:数据/命令标志 0,表示命令;1,表示数据;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                      DATAOUT(dat);       
                      if(cmd)
                        OLED_DC_Set();
                      else 
                        OLED_DC_Clr();                   
                      OLED_CS_Clr();
                      OLED_WR_Clr();   
                      OLED_WR_Set();
                      OLED_CS_Set();    
                      OLED_DC_Set();   
              }                   
              #else
  54          //向SSD1306写入一个字节。
C51 COMPILER V9.01   OLED                                                                  11/14/2017 12:48:22 PAGE 2   

  55          //dat:要写入的数据/命令
  56          //cmd:数据/命令标志 0,表示命令;1,表示数据;
  57          void OLED_WR_Byte(u8 dat,u8 cmd)
  58          {       
  59   1              u8 i;                     
  60   1              if(cmd)
  61   1                OLED_DC_Set();
  62   1              else 
  63   1                OLED_DC_Clr();                  
  64   1              OLED_CS_Clr();
  65   1              for(i=0;i<8;i++)
  66   1              {                         
  67   2                      OLED_SCLK_Clr();
  68   2                      if(dat&0x80)
  69   2                              {
  70   3                         OLED_SDIN_Set();
  71   3                              }
  72   2      else
  73   2                         OLED_SDIN_Clr();
  74   2                                      OLED_SCLK_Set();
  75   2                      dat<<=1;   
  76   2              }                                                 
  77   1              OLED_CS_Set();
  78   1              OLED_DC_Set();            
  79   1      } 
  80          #endif
  81                  void OLED_Set_Pos(unsigned char x, unsigned char y) 
  82          { 
  83   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
  84   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  85   1              OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
  86   1      }         
  87          //开启OLED显示    
  88          void OLED_Display_On(void)
  89          {
  90   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  91   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  92   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  93   1      }
  94          //关闭OLED显示     
  95          void OLED_Display_Off(void)
  96          {
  97   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  98   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  99   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 100   1      }                                        
 101          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 102          void OLED_Clear(void)  
 103          {  
 104   1              u8 i,n;             
 105   1              for(i=0;i<8;i++)  
 106   1              {  
 107   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 108   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 109   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 110   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 111   2              } //更新显示
 112   1      }
 113          
 114          
 115          //在指定位置显示一个字符,包括部分字符
 116          //x:0~127
C51 COMPILER V9.01   OLED                                                                  11/14/2017 12:48:22 PAGE 3   

 117          //y:0~63
 118          //mode:0,反白显示;1,正常显示                             
 119          //size:选择字体 16/12 
 120          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 121          {       
 122   1              unsigned char c=0,i=0;  
 123   1                      c=chr-' ';//得到偏移后的值                      
 124   1                      if(x>Max_Column-1){x=0;y=y+2;}
 125   1                      if(SIZE ==16)
 126   1                              {
 127   2                              OLED_Set_Pos(x,y);      
 128   2                              for(i=0;i<8;i++)
 129   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 130   2                              OLED_Set_Pos(x,y+1);
 131   2                              for(i=0;i<8;i++)
 132   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 133   2                              }
 134   1                              else {  
 135   2                                      OLED_Set_Pos(x,y+1);
 136   2                                      for(i=0;i<6;i++)
 137   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 138   2                                      
 139   2                              }
 140   1      }
 141          //m^n函数
 142          u32 oled_pow(u8 m,u8 n)
 143          {
 144   1              u32 result=1;    
 145   1              while(n--)result*=m;    
 146   1              return result;
 147   1      }                                 
 148          //显示2个数字
 149          //x,y :起点坐标  
 150          //len :数字的位数
 151          //size:字体大小
 152          //mode:模式     0,填充模式;1,叠加模式
 153          //num:数值(0~4294967295);                         
 154          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 155          {               
 156   1              u8 t,temp;
 157   1              u8 enshow=0;                                               
 158   1              for(t=0;t<len;t++)
 159   1              {
 160   2                      temp=(num/oled_pow(10,len-t-1))%10;
 161   2                      if(enshow==0&&t<(len-1))
 162   2                      {
 163   3                              if(temp==0)
 164   3                              {
 165   4                                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); //' '
 166   4                                      continue;
 167   4                              }else enshow=1; 
 168   3                               
 169   3                      }
 170   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
 171   2              }
 172   1      } 
 173          //显示一个字符号串
 174          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 175          {
 176   1              unsigned char j=0;
 177   1              while (chr[j]!='\0')
 178   1              {               OLED_ShowChar(x,y,chr[j]);
C51 COMPILER V9.01   OLED                                                                  11/14/2017 12:48:22 PAGE 4   

 179   2                              x+=8;
 180   2                      if(x>120){x=0;y+=2;}
 181   2                              j++;
 182   2              }
 183   1      }
 184          //显示汉字
 185          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 186          {                           
 187   1              u8 t,adder=0;
 188   1              OLED_Set_Pos(x,y);      
 189   1          for(t=0;t<16;t++)
 190   1                      {
 191   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 192   2                                      adder+=1;
 193   2           }  
 194   1                      OLED_Set_Pos(x,y+1);    
 195   1          for(t=0;t<16;t++)
 196   1                              {       
 197   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 198   2                                      adder+=1;
 199   2            }                                 
 200   1      }
 201          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 202          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 203          {       
 204   1       unsigned int j=0;
 205   1       unsigned char x,y;
 206   1        
 207   1        if(y1%8==0) y=y1/8;      
 208   1        else y=y1/8+1;
 209   1              for(y=y0;y<y1;y++)
 210   1              {
 211   2                      OLED_Set_Pos(x0,y);
 212   2          for(x=x0;x<x1;x++)
 213   2                  {      
 214   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 215   3                  }
 216   2              }
 217   1      } 
 218          
 219          
 220          //初始化SSD1306                                     
 221          void OLED_Init(void)
 222          { 
 223   1          OLED_RST_Set();
 224   1              delay_ms(100);
 225   1              OLED_RST_Clr();
 226   1              delay_ms(100);
 227   1              OLED_RST_Set(); 
 228   1      
 229   1              OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 230   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 231   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 232   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 233   1              OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 234   1              OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 235   1              OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 236   1              OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 237   1              OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 238   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
C51 COMPILER V9.01   OLED                                                                  11/14/2017 12:48:22 PAGE 5   

 239   1              OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 240   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset       Shift Mapping RAM Counter (0x00~0x3F)
 241   1              OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 242   1              OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 243   1              OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 244   1              OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 245   1              OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 246   1              OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 247   1              OLED_WR_Byte(0x12,OLED_CMD);
 248   1              OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 249   1              OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 250   1              OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 251   1              OLED_WR_Byte(0x02,OLED_CMD);//
 252   1              OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 253   1              OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 254   1              OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 255   1              OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 256   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 257   1              
 258   1              OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 259   1              OLED_Clear();
 260   1              OLED_Set_Pos(0,0);      
 261   1      }  
 262          
 263          void Menu_Display(unsigned char x)
 264          {
 265   1              
 266   1              OLED_ShowCHinese(x+0,2,0) ;
 267   1              OLED_ShowCHinese(x+16,2,1) ;
 268   1              OLED_ShowCHinese(x+32,2,2) ;
 269   1              OLED_ShowCHinese(x+48,2,3) ;
 270   1              OLED_ShowCHinese(x+64,2,4) ;
 271   1              OLED_ShowCHinese(x+80,2,5) ;
 272   1              
 273   1              OLED_ShowCHinese(x+96,2,0) ;
 274   1              OLED_ShowCHinese(x+112,2,1) ;
 275   1              OLED_ShowCHinese(x+128,2,2) ;
 276   1      }
 277          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    871    ----
   CONSTANT SIZE    =   2456    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
